Assignment 1 [10 marks]
Deadline: 16 Dec 2022

* This assignment can be done in teams of 5 students or less.
* Team members must be from the same lab so the TA can discuss all of them during one lab time.
* Each team must come up with their own implementation.
* Each student in the team must understand all details of the implementation.
* The code must contain no more than 15,000 characters.
* Your code must NOT include any TAB character. Convert each TAB to 4 spaces before submitting.
* You are not allowed to copy any piece of code from the internet or from any other resource.
* You are not allowed to copy any piece of code from other students.
* You are not allowed to include any files or built-in libraries, except for the described ones.
* Half the mark is dedicatd to comments explaining the code and test cases.
* If you have issue regarding the assignment, contact the TA, not the doctor.
* Get your submission on a flash drive and discuss your submission with the TA during the first lab after the deadline.
* The TA will not tell you your mark. He will report his evaluation to me and I will make the final evaluation.
* You are allowed to submit after the deadline with 10% mark-deduction for each late day.

* Write a Verilog HDL code that does the following:
* You must use only the MINIMUM number of the follwing components: Full-adders, 4x1 Multiplexers, 2x1 Multiplexers, or, and, not, xor gates.
* A full-adder counts only as 1 component, not counting the small components inside. Also, a multiplexer counts as 1 component.
* At the beginning of the file, write a comment including the components you have used and the number of them.
* You must implement multiplexers using structural Verilog descriptions as explained in figure 2-4 in section 2-3 in book "Computer system architecture".
* The input is two selection inputs, and two signed integers in 2's complement form: A and B, each integer is 3-bits.
* The output is a signed integer in 2's complement from: G, its size is 3-bits.
* When the selection inputs are 00, G = A-1
* When the selection inputs are 01, G = A+B
* When the selection inputs are 10, G = A-B
* When the selection inputs are 11, G = -B
* You must provide a test bench that tests all aspects of the implemented circuit with at least 40 test cases on various input values.
* You are not allowed to use behavioral Verilog descriptions (if, switch, ..etc) for multiplexers or any other aspects except for test bench.
* Use structured Verilog descriptions for all aspects, except for test bench, so you can use behavioral Verilog description for test bench only.
* The Verilog HDL code must be able to be compiled in the same way the provided lab samples are compiled with the instructions at top of them.
* Half the mark is dedicatd to comments explaining the code before each code line and test cases.

To submit the code:
* Write your code in exactly one text file such as myfile.vl.
* Make sure that myfile.vl contains the actual code, for example open it in Notepad.
* Encode the file using the assign_encoder tool as the following:
g++ -O3 -o assign_encoder.exe assign_encoder.cpp
assign_encoder.exe ./ArthmaticCircuit.vl 1 5 20200844 20201200 20210616 20200129 20210557
* The 1 in the above line is the assignment ID. The 3 in the above line is number of students.
* Open the resulting assign_1_20101111_20102222_20113333.bin file in a text editor.
* Make sure that the text-editor did not put any line-breaks (un-check the word-wrap option).
* Copy all the text included in the file.
* Paste the text in the dedicated Google Survey link, as well as your IDs. Make sure you choose the correct assignment course and type.
